<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="styles.css">

    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #141e30, #243b55);
            color: #fff;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        .container {
            max-width: 900px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(12px);
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            text-align: center;
            position: relative;
            transition: all 0.3s ease-in-out;
        }

        .container:hover {
            transform: scale(1.02);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        }

        h1 {
            font-size: 2.5rem;
            color: #ffeb3b;
            margin-bottom: 20px;
        }

        p {
            font-size: 1.2rem;
            color: #ddd;
        }

        .transaction-info {
            margin-top: 30px;
            text-align: left;
        }

        .transaction-card {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(10px);
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 15px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            position: relative;
        }

        .transaction-card:hover {
            transform: scale(1.02);
            box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2);
        }

        .progress-container {
            width: 100%;
            height: 20px;
            background: #34495e;
            border-radius: 10px;
            overflow: hidden;
            margin-top: 15px;
            position: relative;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }

        .progress-bar {
            height: 100%;
            border-radius: 10px;
            background: linear-gradient(to right, #4caf50, #8bc34a);
            transition: width 1s ease, background-color 1s ease;
            position: relative;
        }

        .status {
            margin-top: 12px;
            font-weight: bold;
            color: #ffeb3b;
            text-transform: uppercase;
        }

        .expired-status {
            color: red;
            font-weight: bold;
        }

        .no-transactions {
            text-align: center;
            color: #ffeb3b;
            font-weight: bold;
            margin-top: 20px;
        }

        .back-button {
            position: absolute;
            top: 20px;
            left: 20px;
            font-size: 24px;
            color: #ffeb3b;
            cursor: pointer;
            background: none;
            border: none;
            outline: none;
        }

        .back-button:hover {
            color: #ffffff;
        }

        /* Media Query for Responsiveness */
        @media (max-width: 768px) {
            .container {
                padding: 2px;
            }

            h1 {
                font-size: 2rem;
            }

            .transaction-card {
                padding: 15px;
            }
        }
    </style>
</head>

<body>

    <!-- Back Button -->
    <button class="back-button" onclick="goBack()">‚¨Ö Back</button>

    <div class="container">
        <h1>Welcome, <%= user.name %> üéâ</h1>
        <p>Email: <%= user.email %></p>

        <div class="transaction-info">
            <h2>Your Accepted Transactions üí∞</h2>

            <% if (transactions.length > 0) { %>
                <% transactions.forEach(transaction => { %>
                    <% 
                        let startDate = new Date(transaction.start_date);
                        let endDate = new Date(transaction.end_date);
                        let currentDate = new Date();
                        let totalDays = Math.floor((endDate - startDate) / (1000 * 60 * 60 * 24));
                        let daysPassed = Math.floor((currentDate - startDate) / (1000 * 60 * 60 * 24));

                        if (isNaN(startDate) || isNaN(endDate)) totalDays = 0;
                        if (daysPassed > totalDays) daysPassed = totalDays;

                        let progressPercentage = totalDays > 0 ? Math.min(100, (daysPassed / totalDays) * 100) : 0;
                        let progressColor = progressPercentage >= 70 ? '#4caf50' : '#f5a623';

                        let planExpired = currentDate.toDateString() === endDate.toDateString() || currentDate > endDate;
                    %>

                    <div class="transaction-card">
                        <h3>Plan: <%= transaction.plan %>
                        </h3>
                        <p>Amount: ‚Çπ<%= transaction.amount %>
                        </p>
                        <p>Start Date: <%= new Date(transaction.start_date).toLocaleDateString() %>
                        </p>
                        <p>End Date: <%= new Date(transaction.end_date).toLocaleDateString() %>
                        </p>
                    
                        <% if (!planExpired) { %>
                            <div class="progress-container">
                                <div class="progress-bar" style="width: <%= progressPercentage %>%;" data-total-days="<%= totalDays %>"
                                    data-days-passed="<%= daysPassed %>">
                                </div>
                            </div>
                            <p class="status">Status: <%= transaction.status %>
                            </p>
                            <% } else { %>
                                <p class="status expired-status">Your plan has expired ‚ùå</p>
                                <% } %>
                    </div>

                <% }) %>
            <% } else { %>
                <p class="no-transactions">No accepted transactions yet üöÄ</p>
            <% } %>

            <% if (transactions.every(t => new Date(t.end_date) < new Date())) { %>
                <p class="no-transactions">No active plans üöÄ</p>
            <% } %>
        </div>
    </div>
    <script>
        document.querySelector('.back-button').addEventListener('click', function () {
            window.location.href = "/";
        });
    
        // Calculate progress when the page is loaded
        document.addEventListener('DOMContentLoaded', function () {
            // Update the progress every minute (or whatever interval you prefer)
            setInterval(updateProgressBars, 60000); // 60000ms = 1 minute
        
            // Function to calculate and update the progress bars
            function updateProgressBars() {
                const progressBars = document.querySelectorAll('.progress-bar');
                
                progressBars.forEach(bar => {
                    // Get the transaction data from the element's attributes
                    const startDate = new Date(bar.getAttribute('data-start-date'));
                    const endDate = new Date(bar.getAttribute('data-end-date'));
                    const currentDate = new Date();
                    
                    const totalDays = Math.floor((endDate - startDate) / (1000 * 60 * 60 * 24));
                    const daysPassed = Math.floor((currentDate - startDate) / (1000 * 60 * 60 * 24));
                    
                    // Handle case if dates are invalid
                    if (isNaN(startDate) || isNaN(endDate)) return;
    
                    // Make sure daysPassed does not exceed totalDays
                    const validDaysPassed = Math.min(daysPassed, totalDays);
                    const progressPercentage = Math.min(100, (validDaysPassed / totalDays) * 100);
    
                    // Update the progress bar width and color
                    bar.style.width = `${progressPercentage}%`;
                    bar.style.backgroundColor = progressPercentage >= 70 ? '#4caf50' : '#f5a623';
                });
            }
    
            // Initial call to set the progress bar when the page loads
            updateProgressBars();
        });
    </script>
</body>

</html>
